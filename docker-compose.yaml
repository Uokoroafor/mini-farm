name: farm-app
services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend
    networks:
      - farm-app-network
  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db 
    ports:
      - "27017:27017"
    restart: unless-stopped
    networks:
      - farm-app-network
  frontend:
    image: "node:latest"
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
      - WDS_SOCKET_PORT=0
    volumes:
      - ./frontend/:/home/node/app
    expose:
      - "5173"
    ports:
      - "5173:5173"
    command: ["/bin/sh", "-c", "npm install && npm run dev -- --host"]

    networks:
      - farm-app-network

  backend:
    image: farm-app/backend
    build: ./backend
    volumes:
      - ./backend/:/usr/src/app
    expose:
      - "3001"
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    environment:
      - DEBUG=true
    env_file:
      - path: ./.env
        required: true
    networks:
      - farm-app-network

  test:
      image: curlimages/curl:latest
      depends_on:
        backend:
          condition: service_healthy
      entrypoint: ["sh", "-c","curl", "--fail", "http://backend:3001/health && echo Health check passed"]
      
      # Prevents the test container from restarting after it exits
      deploy:
        restart_policy:
          condition: none

networks:
  farm-app-network:
    driver: bridge

volumes:
  mongo_data: